version: '3.8'

services:
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - knowledge_uploads:/app/uploads
      - knowledge_chroma:/app/chroma_db
      - knowledge_models:/app/models
      - knowledge_data:/app/data
    environment:
      - PYTHONPATH=/app
      - CHROMA_PERSIST_DIRECTORY=/app/chroma_db
      - UPLOAD_DIR=/app/uploads
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - DEFAULT_LLM_PROVIDER=${DEFAULT_LLM_PROVIDER:-openai}
    networks:
      - knowledge_fabric
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true
    networks:
      - knowledge_fabric
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add a PostgreSQL database for additional features
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: knowledge_fabric
      POSTGRES_USER: knowledge_user
      POSTGRES_PASSWORD: knowledge_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - knowledge_fabric
    profiles:
      - database

  # Optional: Add Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - knowledge_fabric
    profiles:
      - cache

volumes:
  knowledge_uploads:
    driver: local
  knowledge_chroma:
    driver: local
  knowledge_models:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local
  knowledge_data:
    driver: local

networks:
  knowledge_fabric:
    driver: bridge 